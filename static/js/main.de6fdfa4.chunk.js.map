{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","components/Header.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["InputTodo","props","todoText","onChange","onClick","disabled","className","placeholder","value","IncompleteTodos","todos","onClickComplete","onClickDelete","onClickOngoing","map","todo","index","CompleteTodos","onClickBack","Header","today","Date","getFullYear","getMonth","getDate","App","useState","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","activeTab","setActiveTab","e","target","newTodos","length","newIncompleteTodos","splice","newCompleteTodos","arr","document","querySelectorAll","console","log","classList","contains","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de6fdfa4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const InputTodo = (props) => {\r\n  const { todoText, onChange, onClick, disabled } = props;\r\n  return (\r\n    <div className=\"input-area\">\r\n      <input\r\n        disabled={disabled}\r\n        placeholder=\"Enter new todo\"\r\n        value={todoText}\r\n        onChange={onChange}\r\n      />\r\n      <button disabled={disabled} onClick={onClick}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const IncompleteTodos = (props) => {\r\n  const { todos, onClickComplete, onClickDelete,onClickOngoing } = props;\r\n  \r\n  return (\r\n    <div className=\"incomplete-area\">\r\n      <h2 className=\"title\">Incomplete</h2>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button onClick={() => onClickComplete(index)}>DONE</button>\r\n              <button onClick={() => onClickDelete(index)} className=\"delete\">DELETE</button>\r\n              <button onClick={() => onClickOngoing(index)} className=\"ongoing\">ONGOING</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CompleteTodos = (props) => {\r\n  const { todos, onClickBack } = props;\r\n  return (\r\n    <div className=\"complete-area\">\r\n      <h2 className=\"title\">Done</h2>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button onClick={() => onClickBack(index)}>UNDO</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = () =>{\r\n    const today = new Date;\r\n\r\n    // console.log(today);\r\n    return (\r\n        <div className=\"header\">\r\n            \r\n            <h1>{today.getFullYear() + \"/\" +  (today.getMonth()+1) + \"/\"+ today.getDate()  + \"/\"}</h1>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { InputTodo } from \"./components/InputTodo\";\r\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\r\nimport { CompleteTodos } from \"./components/CompleteTodos\";\r\nimport { Header } from \"./components/Header\";\r\n\r\nimport './style.css';\r\n\r\nfunction App() {\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  const [incompleteTodos, setIncompleteTodos] = useState([\r\n    \"new Task\",\r\n    \"new Task 2\"\r\n  ]);\r\n  const [completeTodos, setCompleteTodos] = useState([\"Task C\", \"Task D\"]);\r\n\r\n  const [activeTab, setActiveTab] = useState(\"tab1\");\r\n  const onClickActive1 = () => {\r\n    setActiveTab(\"tab1\");\r\n  };\r\n  const onClickActive2 = () => {\r\n    setActiveTab(\"tab2\");\r\n  };\r\n\r\n  const onChangeTodoText = (e) => setTodoText(e.target.value);\r\n  const onClickAdd = () => {\r\n    if (todoText === \"\") return;\r\n    const newTodos = [...incompleteTodos, todoText];\r\n    setIncompleteTodos(newTodos);\r\n    setTodoText(\"\");\r\n  };\r\n  const onClickDelete = (index) => {\r\n    const newTodos = [...incompleteTodos];\r\n    newTodos.splice(index, 1);\r\n    setIncompleteTodos(newTodos);\r\n  };\r\n  const onClickOngoing = (index) => {\r\n    const arr = document.querySelectorAll(\".list-row\");\r\n    console.log(arr);\r\n    if(arr[index].classList.contains('ongoing') == true){\r\n      arr[index].classList.remove('ongoing');\r\n    } else {\r\n      arr[index].classList.add('ongoing');\r\n    }\r\n  };\r\n  const onClickComplete = (index) => {\r\n    const newIncompleteTodos = [...incompleteTodos];\r\n    newIncompleteTodos.splice(index, 1);\r\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\r\n    setIncompleteTodos(newIncompleteTodos);\r\n    setCompleteTodos(newCompleteTodos);\r\n  };\r\n\r\n  const onClickBack = (index) => {\r\n    const newCompleteTodos = [...completeTodos];\r\n    newCompleteTodos.splice(index, 1);\r\n\r\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\r\n    setCompleteTodos(newCompleteTodos);\r\n    setIncompleteTodos(newIncompleteTodos);\r\n  };\r\n  return (\r\n    <>\r\n      {/* show header */}\r\n      <Header />\r\n      <div className=\"button-area\">\r\n        <button\r\n          className={activeTab === \"tab1\" ? \"active-btn\" : \"inactive-btn\"}\r\n          onClick={onClickActive1}\r\n        >\r\n          Incomplete\r\n        </button>\r\n        <button\r\n          className={activeTab === \"tab2\" ? \"active-btn\" : \"inactive-btn\"}\r\n          onClick={onClickActive2}\r\n        >\r\n          Done\r\n        </button>\r\n      </div>\r\n      {/* input new task */}\r\n      <InputTodo\r\n        todoText={todoText}\r\n        onChange={onChangeTodoText}\r\n        onClick={onClickAdd}\r\n        disabled={incompleteTodos.length >= 5}\r\n      />\r\n      {incompleteTodos.length >= 5 && (\r\n        <p className=\"overAlert\">\r\n          You can register todo upto 5.\r\n          <br />\r\n          Now it's time to focus finish remaining task.\r\n        </p>\r\n      )}\r\n      <div className={activeTab === \"tab1\" ? \"tab tab-done active\" : \"tab\"}>\r\n        <IncompleteTodos\r\n          todos={incompleteTodos}\r\n          onClickComplete={onClickComplete}\r\n          onClickDelete={onClickDelete}\r\n          onClickOngoing={onClickOngoing}\r\n        />\r\n      </div>\r\n      <div\r\n        className={activeTab === \"tab2\" ? \"tab tab-incomplete active\" : \"tab\"}\r\n      >\r\n        <CompleteTodos todos={completeTodos} onClickBack={onClickBack} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}