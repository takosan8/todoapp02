{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["InputTodo","props","todoText","onChange","onClick","disabled","className","placeholder","value","IncompleteTodos","todos","onClickComplete","onClickDelete","map","todo","index","CompleteTodos","onClickBack","App","useState","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","e","target","newTodos","length","newIncompleteTodos","splice","newCompleteTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEaA,EAAY,SAACC,GAAW,IAC3BC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SACrC,OACE,sBAAKC,UAAU,aAAf,UACE,uBACED,SAAUA,EACVE,YAAY,iBACZC,MAAON,EACPC,SAAUA,IAEZ,wBAAQE,SAAUA,EAAUD,QAASA,EAArC,qBCVOK,EAAkB,SAACR,GAAW,IACjCS,EAA0CT,EAA1CS,MAAOC,EAAmCV,EAAnCU,gBAAiBC,EAAkBX,EAAlBW,cAChC,OACE,sBAAKN,UAAU,kBAAf,UACE,oBAAIA,UAAU,QAAd,wBACA,6BACGI,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAgBT,UAAU,WAA1B,UACE,6BAAKQ,IACL,wBAAQV,QAAS,kBAAMO,EAAgBI,IAAvC,kBACA,wBAAQX,QAAS,kBAAMQ,EAAcG,IAArC,sBAHQD,YCRTE,EAAgB,SAACf,GAAW,IAC/BS,EAAuBT,EAAvBS,MAAOO,EAAgBhB,EAAhBgB,YACf,OACE,sBAAKX,UAAU,gBAAf,UACE,oBAAIA,UAAU,QAAd,sBACA,6BACGI,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAgBT,UAAU,WAA1B,UACE,6BAAKQ,IACL,wBAAQV,QAAS,kBAAMa,EAAYF,IAAnC,oBAFQD,Y,MC0DPI,MA7Df,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNjB,EADM,KACIkB,EADJ,OAEiCD,mBAAS,CACrD,WACA,eAJW,mBAENE,EAFM,KAEWC,EAFX,OAM6BH,mBAAS,CAAC,SAAU,WANjD,mBAMNI,EANM,KAMSC,EANT,KAmCb,OACE,qCACA,cAAC,EAAD,CACEtB,SAAUA,EACVC,SA/BqB,SAACsB,GAAD,OAAOL,EAAYK,EAAEC,OAAOlB,QAgCjDJ,QA/Be,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMyB,EAAQ,sBAAON,GAAP,CAAwBnB,IACtCoB,EAAmBK,GACnBP,EAAY,MA4BVf,SAAUgB,EAAgBO,QAAU,IAErCP,EAAgBO,QAAU,GACzB,8DAEE,uBAFF,mDAOF,cAAC,EAAD,CACElB,MAAOW,EACPV,gBAjCoB,SAACI,GACvB,IAAMc,EAAkB,YAAOR,GAC/BQ,EAAmBC,OAAOf,EAAO,GACjC,IAAMgB,EAAgB,sBAAOR,GAAP,CAAsBF,EAAgBN,KAC5DO,EAAmBO,GACnBL,EAAiBO,IA6BfnB,cAvCkB,SAACG,GACrB,IAAMY,EAAQ,YAAON,GACrBM,EAASG,OAAOf,EAAO,GACvBO,EAAmBK,MAsCnB,cAAC,EAAD,CAAejB,MAAOa,EAAeN,YA7BnB,SAACF,GACnB,IAAMgB,EAAgB,YAAOR,GAC7BQ,EAAiBD,OAAOf,EAAO,GAE/B,IAAMc,EAAkB,sBAAOR,GAAP,CAAwBE,EAAcR,KAC9DS,EAAiBO,GACjBT,EAAmBO,UC5BRG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df1b0dfa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const InputTodo = (props) => {\r\n  const { todoText, onChange, onClick, disabled } = props;\r\n  return (\r\n    <div className=\"input-area\">\r\n      <input\r\n        disabled={disabled}\r\n        placeholder=\"Type some todo\"\r\n        value={todoText}\r\n        onChange={onChange}\r\n      />\r\n      <button disabled={disabled} onClick={onClick}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const IncompleteTodos = (props) => {\r\n  const { todos, onClickComplete, onClickDelete } = props;\r\n  return (\r\n    <div className=\"incomplete-area\">\r\n      <h2 className=\"title\">Incomplete</h2>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button onClick={() => onClickComplete(index)}>DONE</button>\r\n              <button onClick={() => onClickDelete(index)}>DELETE</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CompleteTodos = (props) => {\r\n  const { todos, onClickBack } = props;\r\n  return (\r\n    <div className=\"complete-area\">\r\n      <h2 className=\"title\">complete</h2>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button onClick={() => onClickBack(index)}>UNDO</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { InputTodo } from \"./components/InputTodo\";\r\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\r\nimport { CompleteTodos } from \"./components/CompleteTodos\";\r\n\r\nimport './style.css';\r\n\r\nfunction App() {\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  const [incompleteTodos, setIncompleteTodos] = useState([\r\n    \"new Task\",\r\n    \"new Task 2\"\r\n  ]);\r\n  const [completeTodos, setCompleteTodos] = useState([\"Task C\", \"Task D\"]);\r\n\r\n  const onChangeTodoText = (e) => setTodoText(e.target.value);\r\n  const onClickAdd = () => {\r\n    if (todoText === \"\") return;\r\n    const newTodos = [...incompleteTodos, todoText];\r\n    setIncompleteTodos(newTodos);\r\n    setTodoText(\"\");\r\n  };\r\n  const onClickDelete = (index) => {\r\n    const newTodos = [...incompleteTodos];\r\n    newTodos.splice(index, 1);\r\n    setIncompleteTodos(newTodos);\r\n  };\r\n  const onClickComplete = (index) => {\r\n    const newIncompleteTodos = [...incompleteTodos];\r\n    newIncompleteTodos.splice(index, 1);\r\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\r\n    setIncompleteTodos(newIncompleteTodos);\r\n    setCompleteTodos(newCompleteTodos);\r\n  };\r\n  const onClickBack = (index) => {\r\n    const newCompleteTodos = [...completeTodos];\r\n    newCompleteTodos.splice(index, 1);\r\n\r\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\r\n    setCompleteTodos(newCompleteTodos);\r\n    setIncompleteTodos(newIncompleteTodos);\r\n  };\r\n  return (\r\n    <>\r\n    <InputTodo\r\n      todoText={todoText}\r\n      onChange={onChangeTodoText}\r\n      onClick={onClickAdd}\r\n      disabled={incompleteTodos.length >= 5}\r\n    />\r\n    {incompleteTodos.length >= 5 && (\r\n      <p>\r\n        You can register todo upto 5.\r\n        <br />\r\n        Now it's time to focus finish remaining task.\r\n      </p>\r\n    )}\r\n\r\n    <IncompleteTodos\r\n      todos={incompleteTodos}\r\n      onClickComplete={onClickComplete}\r\n      onClickDelete={onClickDelete}\r\n    />\r\n    <CompleteTodos todos={completeTodos} onClickBack={onClickBack} />\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}